version: '3.8'

services:
  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      # Replace with YOUR actual MongoDB Atlas connection string
      MONGODB_URI: mongodb+srv://admin:F3rRv1NVQIdNGoT5@taskcluster.irhuuyc.mongodb.net/taskdb?retryWrites=true&w=majority&appName=TaskCluster

      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-secret}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    # REMOVED depends_on mongodb
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (r) => {r.statusCode === 200 ? process.exit(0) : process.exit(1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:5000/api
    container_name: task-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  task-network:
    driver: bridge